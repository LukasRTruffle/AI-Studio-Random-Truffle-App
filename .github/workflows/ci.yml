name: CI/CD Pipeline

on:
  push:
    branches: [main, develop, 'claude/**']
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm lint

      - name: Run TypeScript type check
        run: pnpm typecheck

  test-packages:
    name: Test Packages (Vitest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run package tests
        run: |
          cd packages/core && pnpm test --coverage
          cd ../types && pnpm test --coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: |
            packages/core/coverage/coverage-final.json
            packages/types/coverage/coverage-final.json
          flags: packages
          name: packages-coverage

  test-backend:
    name: Test Backend (Jest)
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: random_truffle_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run backend tests
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_NAME: random_truffle_test
          NODE_ENV: test
        run: cd services/api && pnpm test --coverage

      - name: Upload backend coverage
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: services/api/coverage/coverage-final.json
          flags: backend
          name: backend-coverage

  test-e2e:
    name: E2E Tests (Playwright)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: cd apps/web && pnpm exec playwright install --with-deps chromium

      - name: Build frontend
        run: cd apps/web && pnpm build

      - name: Run E2E tests
        run: cd apps/web && pnpm test:e2e
        env:
          CI: true

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30

  build:
    name: Build All Packages
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test-packages, test-backend]
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            apps/web/out
            services/api/dist
          retention-days: 7

  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test-packages, test-backend, test-e2e, build]
    if: always()
    steps:
      - name: Check all jobs passed
        run: |
          if [ "${{ needs.lint-and-typecheck.result }}" != "success" ] || \
             [ "${{ needs.test-packages.result }}" != "success" ] || \
             [ "${{ needs.test-backend.result }}" != "success" ] || \
             [ "${{ needs.build.result }}" != "success" ]; then
            echo "Quality gate failed"
            exit 1
          fi
          echo "âœ… All quality checks passed!"
